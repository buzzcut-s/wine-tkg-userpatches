From: Piotr Caban <piotr@codeweavers.com>
Subject: [PATCH 3/6 v2] server: Use monotonic timer for SetTimer timeouts.
Message-Id: <89bcc37d-065e-52c2-6cac-9cb0683244c9@codeweavers.com>
Date: Fri, 21 Feb 2020 13:43:37 +0100

Signed-off-by: Piotr Caban <piotr@codeweavers.com>
---
  server/queue.c | 8 +++++---
  1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/server/queue.c b/server/queue.c
index b5e17be18f..25d9c16839 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -1154,7 +1154,9 @@ static void set_next_timer( struct msg_queue *queue )
     if ((ptr = list_head( &queue->pending_timers )))
     {
         struct timer *timer = LIST_ENTRY( ptr, struct timer, entry );
-        queue->timeout = add_timeout_user( timer->when, timer_callback, queue );
+        queue->timeout = add_timeout_user(
+                timer->when >= monotonic_time ? monotonic_time - timer->when : 0,
+                timer_callback, queue );
     }
     /* set/clear QS_TIMER bit */
     if (list_empty( &queue->expired_timers ))
@@ -1223,7 +1225,7 @@ static void free_timer( struct msg_queue *queue, struct timer *timer )
 static void restart_timer( struct msg_queue *queue, struct timer *timer )
 {
     list_remove( &timer->entry );
-    while (timer->when <= current_time) timer->when += (timeout_t)timer->rate * 10000;
+    while (timer->when <= monotonic_time) timer->when += (timeout_t)timer->rate * 10000;
     link_timer( queue, timer );
     set_next_timer( queue );
 }
@@ -1255,7 +1257,7 @@ static struct timer *set_timer( struct msg_queue *queue, unsigned int rate )
     if (timer)
     {
         timer->rate = max( rate, 1 );
-        timer->when = current_time + (timeout_t)timer->rate * 10000;
+        timer->when = monotonic_time + (timeout_t)timer->rate * 10000;
         link_timer( queue, timer );
         /* check if we replaced the next timer */
         if (list_head( &queue->pending_timers ) == &timer->entry) set_next_timer( queue );

