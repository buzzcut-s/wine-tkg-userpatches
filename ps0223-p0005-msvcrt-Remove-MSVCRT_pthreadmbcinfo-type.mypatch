From: Piotr Caban <piotr@codeweavers.com>
Subject: [PATCH 5/7] msvcrt: Remove MSVCRT_pthreadmbcinfo type.
Message-Id: <4ebf42b0-ff60-4e2d-6c54-9e9bd77ca132@codeweavers.com>
Date: Thu, 26 Nov 2020 19:19:13 +0100

Signed-off-by: Piotr Caban <piotr@codeweavers.com>
---
  dlls/msvcrt/locale.c |  6 +++---
  dlls/msvcrt/mbcs.c   | 32 ++++++++++++++++----------------
  dlls/msvcrt/msvcrt.h | 16 +++++++---------
  3 files changed, 26 insertions(+), 28 deletions(-)

diff --git a/dlls/msvcrt/locale.c b/dlls/msvcrt/locale.c
index 6ceaa3c0ef0..86d4a2dbe8f 100644
--- a/dlls/msvcrt/locale.c
+++ b/dlls/msvcrt/locale.c
@@ -656,7 +656,7 @@ pthreadlocinfo CDECL get_locinfo(void) {
     return *get_locinfo_ptr();
 }
 
-MSVCRT_pthreadmbcinfo* CDECL get_mbcinfo_ptr(void) {
+pthreadmbcinfo* CDECL get_mbcinfo_ptr(void) {
     thread_data_t *data = msvcrt_get_thread_data();
 
     if(!data || !data->have_locale)
@@ -666,7 +666,7 @@ MSVCRT_pthreadmbcinfo* CDECL get_mbcinfo_ptr(void) {
 }
 
 /* INTERNAL: returns pthreadmbcinfo struct */
-MSVCRT_pthreadmbcinfo CDECL get_mbcinfo(void) {
+pthreadmbcinfo CDECL get_mbcinfo(void) {
     return *get_mbcinfo_ptr();
 }
 
@@ -1139,8 +1139,8 @@ void free_locinfo(pthreadlocinfo locinfo)
     MSVCRT_free(locinfo);
 }
 
-/* INTERNAL: frees MSVCRT_pthreadmbcinfo struct */
-void free_mbcinfo(MSVCRT_pthreadmbcinfo mbcinfo)
+/* INTERNAL: frees pthreadmbcinfo struct */
+void free_mbcinfo(pthreadmbcinfo mbcinfo)
 {
     if(!mbcinfo)
         return;
diff --git a/dlls/msvcrt/mbcs.c b/dlls/msvcrt/mbcs.c
index 549c94ffd98..101d47dab6e 100644
--- a/dlls/msvcrt/mbcs.c
+++ b/dlls/msvcrt/mbcs.c
@@ -88,7 +88,7 @@ static const unsigned char mbctombb_932_kana[] = {
 
 static MSVCRT_wchar_t msvcrt_mbc_to_wc_l(unsigned int ch, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
     MSVCRT_wchar_t chW;
     char mbch[2];
     int n_chars;
@@ -210,9 +210,9 @@ int CDECL ___mb_cur_max_l_func(MSVCRT__locale_t locale)
 /*********************************************************************
  * INTERNAL: _setmbcp_l
  */
-MSVCRT_threadmbcinfo* create_mbcinfo(int cp, LCID lcid, MSVCRT_threadmbcinfo *old_mbcinfo)
+threadmbcinfo* create_mbcinfo(int cp, LCID lcid, threadmbcinfo *old_mbcinfo)
 {
-  MSVCRT_threadmbcinfo *mbcinfo;
+  threadmbcinfo *mbcinfo;
   int newcp;
   CPINFO cpi;
   BYTE *bytes;
@@ -229,7 +229,7 @@ MSVCRT_threadmbcinfo* create_mbcinfo(int cp, LCID lcid, MSVCRT_threadmbcinfo *ol
     return old_mbcinfo;
   }
 
-  mbcinfo = MSVCRT_malloc(sizeof(MSVCRT_threadmbcinfo));
+  mbcinfo = MSVCRT_malloc(sizeof(threadmbcinfo));
   if(!mbcinfo)
     return NULL;
   mbcinfo->refcount = 1;
@@ -385,8 +385,8 @@ MSVCRT_threadmbcinfo* create_mbcinfo(int cp, LCID lcid, MSVCRT_threadmbcinfo *ol
  */
 int CDECL _setmbcp(int cp)
 {
-    MSVCRT_threadmbcinfo **old_mbcinfo = get_mbcinfo_ptr();
-    MSVCRT_threadmbcinfo *mbcinfo;
+    threadmbcinfo **old_mbcinfo = get_mbcinfo_ptr();
+    threadmbcinfo *mbcinfo;
 
     mbcinfo = create_mbcinfo(cp, -1, *old_mbcinfo);
     if(!mbcinfo) {
@@ -619,7 +619,7 @@ unsigned char* CDECL _mbsninc(const unsigned char* str, MSVCRT_size_t num)
 MSVCRT_size_t CDECL _mbsnlen_l(const unsigned char *str,
         MSVCRT_size_t maxsize, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
     MSVCRT_size_t i = 0, len = 0;
 
     if(!locale)
@@ -903,7 +903,7 @@ unsigned char* CDECL _mbsnbcpy(unsigned char* dst, const unsigned char* src, MSV
  */
 int CDECL _mbscmp_l(const unsigned char* str, const unsigned char* cmp, MSVCRT__locale_t locale)
 {
-  MSVCRT_pthreadmbcinfo mbcinfo;
+  pthreadmbcinfo mbcinfo;
 
   if (!str || !cmp) return INT_MAX;
 
@@ -941,7 +941,7 @@ int CDECL _mbscmp(const unsigned char* str, const unsigned char* cmp, MSVCRT__lo
  */
 int CDECL _mbsnbicoll_l(const unsigned char *str1, const unsigned char *str2, MSVCRT_size_t len, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -987,7 +987,7 @@ int CDECL _mbsicoll(const unsigned char* str, const unsigned char* cmp)
  */
 int CDECL _mbsnbcoll_l(const unsigned char *str1, const unsigned char *str2, MSVCRT_size_t len, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -1326,7 +1326,7 @@ unsigned char* CDECL _mbsrchr(const unsigned char* s, unsigned int x)
 unsigned char* CDECL _mbstok_s_l(unsigned char *str, const unsigned char *delim,
         unsigned char **ctx, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
     unsigned int c;
 
     if(!MSVCRT_CHECK_PMT(delim != NULL)) return NULL;
@@ -1426,7 +1426,7 @@ unsigned int CDECL _mbbtombc(unsigned int c)
  */
 int CDECL _ismbbkana_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(locale)
         mbcinfo = locale->mbcinfo;
@@ -1640,7 +1640,7 @@ int CDECL _ismbckata(unsigned int c)
  */
 int CDECL _ismbblead_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -1663,7 +1663,7 @@ int CDECL _ismbblead(unsigned int c)
  */
 int CDECL _ismbbtrail_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -2723,7 +2723,7 @@ unsigned int CDECL _mbctokata(unsigned int c)
  */
 int CDECL _ismbcl0_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -2752,7 +2752,7 @@ int CDECL _ismbcl0(unsigned int c)
  */
 int CDECL _ismbcl1_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
@@ -2781,7 +2781,7 @@ int CDECL _ismbcl1(unsigned int c)
  */
 int CDECL _ismbcl2_l(unsigned int c, MSVCRT__locale_t locale)
 {
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 
     if(!locale)
         mbcinfo = get_mbcinfo();
diff --git a/dlls/msvcrt/msvcrt.h b/dlls/msvcrt/msvcrt.h
index ca6ffe5f87e..5ecffc7f8ab 100644
--- a/dlls/msvcrt/msvcrt.h
+++ b/dlls/msvcrt/msvcrt.h
@@ -121,7 +121,7 @@ typedef struct __lc_time_data {
     char data[1];
 } __lc_time_data;
 
-typedef struct MSVCRT_threadmbcinfostruct {
+typedef struct threadmbcinfostruct {
     int refcount;
     int mbcodepage;
     int ismbcodepage;
@@ -129,14 +129,12 @@ typedef struct MSVCRT_threadmbcinfostruct {
     unsigned short mbulinfo[6];
     unsigned char mbctype[257];
     unsigned char mbcasemap[256];
-} MSVCRT_threadmbcinfo;
-
-typedef struct MSVCRT_threadmbcinfostruct *MSVCRT_pthreadmbcinfo;
+} threadmbcinfo;
 
 typedef struct MSVCRT_localeinfo_struct
 {
     pthreadlocinfo locinfo;
-    MSVCRT_pthreadmbcinfo mbcinfo;
+    pthreadmbcinfo mbcinfo;
 } MSVCRT__locale_tstruct, *MSVCRT__locale_t;
 
 typedef struct MSVCRT__onexit_table_t
@@ -194,7 +192,7 @@ struct __thread_data {
     void                           *unk4[3];
     EXCEPTION_POINTERS             *xcptinfo;
     int                             fpecode;
-    MSVCRT_pthreadmbcinfo           mbcinfo;
+    pthreadmbcinfo                  mbcinfo;
     pthreadlocinfo                  locinfo;
     int                             locale_flags;
     int                             unk5[1];
@@ -932,12 +930,12 @@ extern MSVCRT__locale_t MSVCRT_locale;
 MSVCRT__locale_t CDECL get_current_locale_noalloc(MSVCRT__locale_t locale) DECLSPEC_HIDDEN;
 void CDECL free_locale_noalloc(MSVCRT__locale_t locale) DECLSPEC_HIDDEN;
 pthreadlocinfo CDECL get_locinfo(void) DECLSPEC_HIDDEN;
-MSVCRT_pthreadmbcinfo CDECL get_mbcinfo(void) DECLSPEC_HIDDEN;
-MSVCRT_pthreadmbcinfo* CDECL get_mbcinfo_ptr(void) DECLSPEC_HIDDEN;
+pthreadmbcinfo CDECL get_mbcinfo(void) DECLSPEC_HIDDEN;
+pthreadmbcinfo* CDECL get_mbcinfo_ptr(void) DECLSPEC_HIDDEN;
 void __cdecl MSVCRT__free_locale(MSVCRT__locale_t);
-MSVCRT_threadmbcinfo* create_mbcinfo(int, LCID, MSVCRT_threadmbcinfo*) DECLSPEC_HIDDEN;
+threadmbcinfo* create_mbcinfo(int, LCID, threadmbcinfo*) DECLSPEC_HIDDEN;
 void free_locinfo(pthreadlocinfo) DECLSPEC_HIDDEN;
-void free_mbcinfo(MSVCRT_pthreadmbcinfo) DECLSPEC_HIDDEN;
+void free_mbcinfo(pthreadmbcinfo) DECLSPEC_HIDDEN;
 int __cdecl __crtLCMapStringA(LCID, DWORD, const char*, int, char*, int, unsigned int, int) DECLSPEC_HIDDEN;
 
 int            __cdecl MSVCRT__write(int,const void*,unsigned int);

