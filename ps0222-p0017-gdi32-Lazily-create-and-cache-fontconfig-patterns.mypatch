From 0f5454441018b1f1df098518400da34c06bd8b1c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 7 Nov 2020 01:39:07 +0100
Subject: [PATCH 17/24] gdi32: Lazily create and cache fontconfig patterns.

---
 dlls/gdi32/freetype.c | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/dlls/gdi32/freetype.c b/dlls/gdi32/freetype.c
index e68dbd4638b..a7e1a2a0418 100644
--- a/dlls/gdi32/freetype.c
+++ b/dlls/gdi32/freetype.c
@@ -1509,9 +1509,9 @@ static UINT parse_aa_pattern( FcPattern *pattern )
     return aa_flags;
 }
 
-static FcPattern *create_family_pattern( const char *name )
+static FcPattern *create_family_pattern( const char *name, FcPattern **cached )
 {
-    FcPattern *ret, *pattern = pFcPatternCreate();
+    FcPattern *ret = NULL, *tmp, *pattern = pFcPatternCreate();
     FcResult result;
 
     pFcPatternAddString( pattern, FC_FAMILY, (const FcChar8 *)name );
@@ -1519,11 +1519,12 @@ static FcPattern *create_family_pattern( const char *name )
     pFcPatternAddString( pattern, FC_PRGNAME, (const FcChar8 *)"wine" );
     pFcConfigSubstitute( NULL, pattern, FcMatchPattern );
     pFcDefaultSubstitute( pattern );
-    ret = pFcFontMatch( NULL, pattern, &result );
+    tmp = pFcFontMatch( NULL, pattern, &result );
     pFcPatternDestroy( pattern );
-    if (ret && result == FcResultMatch) return ret;
-    pFcPatternDestroy( ret );
-    return NULL;
+    if (result != FcResultMatch) pFcPatternDestroy( tmp );
+    else if ((ret = InterlockedCompareExchangePointer( (void **)cached, tmp, NULL ))) pFcPatternDestroy( tmp );
+    else ret = tmp;
+    return ret;
 }
 
 static void fontconfig_add_font( FcPattern *pattern, DWORD flags )
@@ -1644,9 +1645,6 @@ static void init_fontconfig(void)
             default_aa_flags = parse_aa_pattern( pattern );
             pFcPatternDestroy( pattern );
         }
-        pattern_serif = create_family_pattern( "serif" );
-        pattern_fixed = create_family_pattern( "monospace" );
-        pattern_sans = create_family_pattern( "sans" );
 
         TRACE( "enabled, default flags = %x\n", default_aa_flags );
         fontconfig_enabled = TRUE;
@@ -2399,9 +2397,9 @@ static BOOL CDECL fontconfig_enum_family_fallbacks( DWORD pitch_and_family, int
     char *str;
     DWORD len;
 
-    if ((pitch_and_family & FIXED_PITCH) || (pitch_and_family & 0xf0) == FF_MODERN) pat = pattern_fixed;
-    else if ((pitch_and_family & 0xf0) == FF_ROMAN) pat = pattern_serif;
-    else pat = pattern_sans;
+    if ((pitch_and_family & FIXED_PITCH) || (pitch_and_family & 0xf0) == FF_MODERN) pat = create_family_pattern( "monospace", &pattern_fixed );
+    else if ((pitch_and_family & 0xf0) == FF_ROMAN) pat = create_family_pattern( "serif", &pattern_serif );
+    else pat = create_family_pattern( "sans", &pattern_sans );
 
     if (!pat) return FALSE;
     if (pFcPatternGetString( pat, FC_FAMILY, index, (FcChar8 **)&str ) != FcResultMatch) return FALSE;
-- 
2.29.2

