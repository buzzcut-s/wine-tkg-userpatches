From 4cb24ca4ed7d43e2153a2d52ebe22139e8ec744e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Wed, 7 Oct 2020 16:20:53 +0200
Subject: [PATCH 12/24] gdi32: Use FreeType as a fallback when loading font
 faces.

---
 dlls/gdi32/freetype.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/dlls/gdi32/freetype.c b/dlls/gdi32/freetype.c
index 800babdcab1..1694f8d3928 100644
--- a/dlls/gdi32/freetype.c
+++ b/dlls/gdi32/freetype.c
@@ -1112,15 +1112,10 @@ static struct unix_face *unix_face_create( const char *unix_name, void *font_dat
 
     if (!(This = RtlAllocateHeap( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*This) ))) goto done;
 
-    if (!(This->ft_face = new_ft_face( unix_name, font_data_ptr, font_data_size, face_index, flags & ADDFONT_ALLOW_BITMAP )))
-    {
-        RtlFreeHeap( GetProcessHeap(), 0, This );
-        This = NULL;
-    }
-    else if (opentype_get_ttc_sfnt_v1( font_data_ptr, font_data_size, face_index, &face_count, &ttc_sfnt_v1 ) &&
-             opentype_get_tt_name_v0( font_data_ptr, font_data_size, ttc_sfnt_v1, &tt_name_v0 ) &&
-             opentype_get_properties( font_data_ptr, font_data_size, ttc_sfnt_v1, &This->font_version,
-                                      &This->fs, &This->ntm_flags ))
+    if (opentype_get_ttc_sfnt_v1( font_data_ptr, font_data_size, face_index, &face_count, &ttc_sfnt_v1 ) &&
+        opentype_get_tt_name_v0( font_data_ptr, font_data_size, ttc_sfnt_v1, &tt_name_v0 ) &&
+        opentype_get_properties( font_data_ptr, font_data_size, ttc_sfnt_v1, &This->font_version,
+                                 &This->fs, &This->ntm_flags ))
     {
         struct family_names_data family_names;
         struct face_name_data style_name;
@@ -1162,7 +1157,7 @@ static struct unix_face *unix_face_create( const char *unix_name, void *font_dat
             WARN( "full name not found, using %s instead\n", debugstr_w(This->full_name) );
         }
     }
-    else
+    else if ((This->ft_face = new_ft_face( unix_name, font_data_ptr, font_data_size, face_index, flags & ADDFONT_ALLOW_BITMAP )))
     {
         WARN( "unable to parse font, falling back to FreeType\n" );
         This->scalable = FT_IS_SCALABLE( This->ft_face );
@@ -1193,6 +1188,11 @@ static struct unix_face *unix_face_create( const char *unix_name, void *font_dat
         if (!This->scalable) get_bitmap_size( This->ft_face, &This->size );
         get_fontsig( This->ft_face, &This->fs );
     }
+    else
+    {
+        RtlFreeHeap( GetProcessHeap(), 0, This );
+        This = NULL;
+    }
 
 done:
     if (unix_name) munmap( font_data_ptr, font_data_size );
@@ -1201,7 +1201,7 @@ done:
 
 static void unix_face_destroy( struct unix_face *This )
 {
-    pFT_Done_Face( This->ft_face );
+    if (This->ft_face) pFT_Done_Face( This->ft_face );
     RtlFreeHeap( GetProcessHeap(), 0, This->full_name );
     RtlFreeHeap( GetProcessHeap(), 0, This->style_name );
     RtlFreeHeap( GetProcessHeap(), 0, This->second_name );
-- 
2.29.2

