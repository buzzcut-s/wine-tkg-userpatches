From d20e426840e897163367904ed6f240318696522a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 6 Nov 2020 21:29:57 +0100
Subject: [PATCH 19/24] gdi32: Update the external keys after loading system
 fonts.

---
 dlls/gdi32/font.c        | 88 +++++++++++++++-------------------------
 dlls/gdi32/gdi_private.h |  1 +
 2 files changed, 34 insertions(+), 55 deletions(-)

diff --git a/dlls/gdi32/font.c b/dlls/gdi32/font.c
index 80612661329..d1d7c5e53f2 100644
--- a/dlls/gdi32/font.c
+++ b/dlls/gdi32/font.c
@@ -7808,7 +7808,6 @@ struct external_key
     struct wine_rb_entry entry;
     BOOL                 found;
     WCHAR                value[LF_FULLFACESIZE + 12];
-    WCHAR                path[1];
 };
 
 static int compare_external_key( const void *key, const struct wine_rb_entry *entry )
@@ -7816,59 +7815,58 @@ static int compare_external_key( const void *key, const struct wine_rb_entry *en
     return facename_compare( key, WINE_RB_ENTRY_VALUE( entry, struct external_key, entry )->value, -1 );
 }
 
-static struct wine_rb_tree external_keys = { compare_external_key };
-
-static HKEY load_external_font_keys(void)
+static void update_external_font_keys(void)
 {
-    WCHAR value[LF_FULLFACESIZE + 12], path[MAX_PATH];
-    DWORD i = 0, type, dlen, vlen;
-    struct external_key *key;
+    struct wine_rb_tree external_keys = { compare_external_key };
+    HKEY winnt_key = 0, win9x_key = 0;
+    struct gdi_font_family *family;
+    struct external_key *key, *next;
+    struct gdi_font_face *face;
+    DWORD len, i = 0, type, dlen, vlen;
+    WCHAR value[LF_FULLFACESIZE + 12], full_name[LF_FULLFACESIZE + 12], path[MAX_PATH], *tmp;
+    WCHAR *file;
     HKEY hkey;
 
-    if (RegCreateKeyW( wine_fonts_key, L"External Fonts", &hkey )) return 0;
+    RegCreateKeyExW( HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows NT\\CurrentVersion\\Fonts",
+                     0, NULL, 0, KEY_ALL_ACCESS, NULL, &winnt_key, NULL );
+    RegCreateKeyExW( HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Fonts",
+                     0, NULL, 0, KEY_ALL_ACCESS, NULL, &win9x_key, NULL );
+
+    /* enumerate the fonts and add external ones to the two keys */
+
+    if (RegCreateKeyW( wine_fonts_key, L"External Fonts", &hkey )) return;
 
     vlen = ARRAY_SIZE(value);
     dlen = sizeof(path);
     while (!RegEnumValueW( hkey, i++, value, &vlen, NULL, &type, (BYTE *)path, &dlen ))
     {
         if (type != REG_SZ) goto next;
-        dlen /= sizeof(WCHAR);
-        if (!(key = HeapAlloc( GetProcessHeap(), 0, offsetof(struct external_key, path[dlen]) ))) break;
-        key->found = FALSE;
+        lstrcpyW( full_name, value );
+        if ((tmp = wcsrchr( full_name, ' ' )) && !facename_compare( tmp, L" (TrueType)", -1 )) *tmp = '\0';
+
+        if ((face = find_face_from_full_name( full_name )))
+        {
+            /* if the path matches the external key, mark the face as up to date,
+             * otherwise just ignore the external key, and the path will be updated
+             * in the next loop, but the entry will not be removed in the third one */
+            if (!wcsicmp( face->file, path ))
+                face->flags |= ADDFONT_EXTERNAL_FOUND;
+            goto next;
+        }
+        if (!(key = HeapAlloc( GetProcessHeap(), 0, sizeof(*key) ))) break;
         lstrcpyW( key->value, value );
-        lstrcpyW( key->path, path );
         wine_rb_put( &external_keys, value, &key->entry );
     next:
         vlen = ARRAY_SIZE(value);
         dlen = sizeof(path);
     }
-    return hkey;
-}
-
-static void update_external_font_keys( HKEY hkey )
-{
-    HKEY winnt_key = 0, win9x_key = 0;
-    struct gdi_font_family *family;
-    struct gdi_font_face *face;
-    struct wine_rb_entry *entry;
-    struct external_key *key, *next;
-    DWORD len;
-    BOOL skip;
-    WCHAR value[LF_FULLFACESIZE + 12], path[MAX_PATH];
-    WCHAR *file;
-
-    RegCreateKeyExW( HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows NT\\CurrentVersion\\Fonts",
-                     0, NULL, 0, KEY_ALL_ACCESS, NULL, &winnt_key, NULL );
-    RegCreateKeyExW( HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Fonts",
-                     0, NULL, 0, KEY_ALL_ACCESS, NULL, &win9x_key, NULL );
-
-    /* enumerate the fonts and add external ones to the two keys */
 
     WINE_RB_FOR_EACH_ENTRY( family, &family_tree, struct gdi_font_family, entry )
     {
         LIST_FOR_EACH_ENTRY( face, &family->faces, struct gdi_font_face, entry )
         {
             if (!(face->flags & ADDFONT_EXTERNAL_FONT)) continue;
+            if ((face->flags & ADDFONT_EXTERNAL_FOUND)) continue;
 
             lstrcpyW( value, face->full_name );
             if (face->scalable) lstrcatW( value, L" (TrueType)" );
@@ -7880,15 +7878,6 @@ static void update_external_font_keys( HKEY hkey )
             else
                 file = face->file;
 
-            skip = FALSE;
-            if ((entry = wine_rb_get( &external_keys, value )))
-            {
-                struct external_key *key = WINE_RB_ENTRY_VALUE( entry, struct external_key, entry );
-                skip = key->found && !wcsicmp( key->path, file );
-                wine_rb_remove_key( &external_keys, value );
-                HeapFree( GetProcessHeap(), 0, key );
-            }
-            if (skip) continue;
             len = (lstrlenW(file) + 1) * sizeof(WCHAR);
             RegSetValueExW( winnt_key, value, 0, REG_SZ, (BYTE *)file, len );
             RegSetValueExW( win9x_key, value, 0, REG_SZ, (BYTE *)file, len );
@@ -7905,13 +7894,13 @@ static void update_external_font_keys( HKEY hkey )
     }
     RegCloseKey( win9x_key );
     RegCloseKey( winnt_key );
+    RegCloseKey( hkey );
 }
 
 static void load_registry_fonts(void)
 {
     WCHAR value[LF_FULLFACESIZE + 12], full_name[LF_FULLFACESIZE + 12], data[MAX_PATH], *tmp;
     DWORD i = 0, type, dlen, vlen;
-    struct wine_rb_entry *entry;
     HKEY hkey;
 
     /* Look under HKLM\Software\Microsoft\Windows[ NT]\CurrentVersion\Fonts
@@ -7938,15 +7927,6 @@ static void load_registry_fonts(void)
         else
         {
             dlen /= sizeof(WCHAR);
-            if ((entry = wine_rb_get( &external_keys, value )))
-            {
-                struct external_key *key = WINE_RB_ENTRY_VALUE( entry, struct external_key, entry );
-                if (!wcsicmp( key->path, data ))
-                {
-                    key->found = TRUE;
-                    goto next;
-                }
-            }
             if (data[0] && data[1] == ':')
                 add_font_resource( data, ADDFONT_ALLOW_BITMAP | ADDFONT_ADD_TO_CACHE );
             else if (dlen >= 6 && !wcsicmp( data + dlen - 5, L".fon" ))
@@ -7985,13 +7965,11 @@ void font_init(void)
 
     if (disposition == REG_CREATED_NEW_KEY)
     {
-        HKEY key = load_external_font_keys();
         load_system_bitmap_fonts();
         load_file_system_fonts();
         load_registry_fonts();
         font_funcs->load_fonts();
-        update_external_font_keys( key );
-        RegCloseKey( key );
+        update_external_font_keys();
     }
     else load_font_list_from_cache();
 
diff --git a/dlls/gdi32/gdi_private.h b/dlls/gdi32/gdi_private.h
index ab85cf6ff8f..4261c6fa254 100644
--- a/dlls/gdi32/gdi_private.h
+++ b/dlls/gdi32/gdi_private.h
@@ -376,6 +376,7 @@ struct gdi_font
 #define ADDFONT_ADD_TO_CACHE  0x04
 #define ADDFONT_ADD_RESOURCE  0x08  /* added through AddFontResource */
 #define ADDFONT_VERTICAL_FONT 0x10
+#define ADDFONT_EXTERNAL_FOUND 0x20
 #define ADDFONT_AA_FLAGS(flags) ((flags) << 16)
 
 struct font_backend_funcs
-- 
2.29.2

