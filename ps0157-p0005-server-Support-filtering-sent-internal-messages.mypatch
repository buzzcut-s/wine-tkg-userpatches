From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH v2 5/8] server: Support filtering sent internal messages.
Message-Id: <20201001102004.149704-5-rbernon@codeweavers.com>
Date: Thu,  1 Oct 2020 12:20:01 +0200
In-Reply-To: <20201001102004.149704-1-rbernon@codeweavers.com>
References: <20201001102004.149704-1-rbernon@codeweavers.com>

We will need this to process only a specific internal message type
without processing any of the other messages.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 server/queue.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/server/queue.c b/server/queue.c
index 9b322b340fe..aa09db36238 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -2698,8 +2698,8 @@ DECL_HANDLER(post_quit_message)
 /* get a message from the current queue */
 DECL_HANDLER(get_message)
 {
+    struct message *msg;
     struct timer *timer;
-    struct list *ptr;
     struct msg_queue *queue = get_current_queue();
     user_handle_t get_win = get_user_full_handle( req->get_win );
     unsigned int filter = req->flags >> 16;
@@ -2724,9 +2724,12 @@ DECL_HANDLER(get_message)
     }
 
     /* first check for sent messages */
-    if ((ptr = list_head( &queue->msg_list[SEND_MESSAGE] )))
+    LIST_FOR_EACH_ENTRY( msg, &queue->msg_list[SEND_MESSAGE], struct message, entry )
     {
-        struct message *msg = LIST_ENTRY( ptr, struct message, entry );
+        /* skip filtered internal messages */
+        if ((req->get_first & 0x80000000) && (req->get_last & 0x80000000) &&
+            !check_msg_filter( msg->msg, req->get_first, req->get_last ))
+            continue;
         receive_message( queue, msg, reply );
         return;
     }
