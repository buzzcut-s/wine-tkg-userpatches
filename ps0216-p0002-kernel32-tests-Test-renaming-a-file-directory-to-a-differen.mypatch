From: "Gabriel Ivăncescu" <gabrielopcode@gmail.com>
Subject: [PATCH v2 2/2] kernel32/tests: Test renaming a file/directory to a different casing of itself.
Message-Id: <c8f0ed6afbeb381ea3c0e820e6f44a532f39989d.1603889541.git.gabrielopcode@gmail.com>
Date: Wed, 28 Oct 2020 14:54:36 +0200
In-Reply-To: <2b11a524f6054353a6c53e0560ee3f2e110adcba.1603889541.git.gabrielopcode@gmail.com>
References: <2b11a524f6054353a6c53e0560ee3f2e110adcba.1603889541.git.gabrielopcode@gmail.com>

Signed-off-by: Gabriel Ivăncescu <gabrielopcode@gmail.com>
---
 dlls/kernel32/tests/file.c | 64 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 64 insertions(+)

diff --git a/dlls/kernel32/tests/file.c b/dlls/kernel32/tests/file.c
index 9327d03..0a19355 100644
--- a/dlls/kernel32/tests/file.c
+++ b/dlls/kernel32/tests/file.c
@@ -1954,6 +1954,7 @@ static void test_MoveFileA(void)
     char tempdir[MAX_PATH];
     char source[MAX_PATH], dest[MAX_PATH];
     static const char prefix[] = "pfx";
+    WIN32_FIND_DATAA find_data;
     HANDLE hfile;
     HANDLE hmapfile;
     DWORD ret;
@@ -2023,9 +2024,72 @@ static void test_MoveFileA(void)
     ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
 
     lstrcatA(tempdir, "Remove Me");
+
+    /* test renaming a file "Remove Me" to itself but in lowercase "me" */
+    lstrcpyA(source, tempdir);
+    tempdir[lstrlenA(tempdir) - 2] = 'm';
+
+    hfile = CreateFileA(source, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, CREATE_ALWAYS, 0, 0);
+    ok(hfile != INVALID_HANDLE_VALUE, "failed to create %s\n", source);
+    CloseHandle(hfile);
+
+    ret = MoveFileA(source, tempdir);
+    ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
+
+    hfile = FindFirstFileA(tempdir, &find_data);
+    ok(hfile != INVALID_HANDLE_VALUE, "FindFirstFileA: failed, error %d\n", GetLastError());
+    if (hfile != INVALID_HANDLE_VALUE)
+    {
+        ok(!lstrcmpA(strrchr(tempdir, '\\') + 1, find_data.cFileName),
+           "MoveFile failed to change caps on same file: got %s\n", find_data.cFileName);
+    }
+    CloseHandle(hfile);
+
+    /* test renaming another file "Remove Be" to "Remove Me", which replaces the existing "Remove me" */
+    tempdir[lstrlenA(tempdir) - 2] = 'B';
+
+    hfile = CreateFileA(tempdir, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, CREATE_ALWAYS, 0, 0);
+    ok(hfile != INVALID_HANDLE_VALUE, "failed to create %s\n", tempdir);
+    CloseHandle(hfile);
+
+    ret = MoveFileA(tempdir, source);
+    ok(!ret, "MoveFileA: expected failure\n");
+    ok(GetLastError() == ERROR_ALREADY_EXISTS, "MoveFileA: expected ERROR_ALREADY_EXISTS, got %d\n", GetLastError());
+    ret = MoveFileExA(tempdir, source, MOVEFILE_REPLACE_EXISTING);
+    ok(ret, "MoveFileExA: failed, error %d\n", GetLastError());
+
+    tempdir[lstrlenA(tempdir) - 2] = 'm';
+
+    hfile = FindFirstFileA(tempdir, &find_data);
+    ok(hfile != INVALID_HANDLE_VALUE, "FindFirstFileA: failed, error %d\n", GetLastError());
+    if (hfile != INVALID_HANDLE_VALUE)
+    {
+        ok(!lstrcmpA(strrchr(source, '\\') + 1, find_data.cFileName),
+           "MoveFile failed to change caps on existing target file: got %s\n", find_data.cFileName);
+    }
+    CloseHandle(hfile);
+
+    ret = DeleteFileA(tempdir);
+    ok(ret, "DeleteFileA: error %d\n", GetLastError());
+
+    /* now test a directory from "Remove me" to uppercase "Me" */
     ret = CreateDirectoryA(tempdir, NULL);
     ok(ret == TRUE, "CreateDirectoryA failed\n");
 
+    lstrcpyA(source, tempdir);
+    tempdir[lstrlenA(tempdir) - 2] = 'M';
+    ret = MoveFileA(source, tempdir);
+    ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
+
+    hfile = FindFirstFileA(tempdir, &find_data);
+    ok(hfile != INVALID_HANDLE_VALUE, "FindFirstFileA: failed, error %d\n", GetLastError());
+    if (hfile != INVALID_HANDLE_VALUE)
+    {
+        ok(!lstrcmpA(strrchr(tempdir, '\\') + 1, find_data.cFileName),
+           "MoveFile failed to change caps on same directory: got %s\n", find_data.cFileName);
+    }
+    CloseHandle(hfile);
+
     lstrcpyA(source, dest);
     lstrcpyA(dest, tempdir);
     lstrcatA(dest, "\\wild?.*");

-- 
2.21.0

