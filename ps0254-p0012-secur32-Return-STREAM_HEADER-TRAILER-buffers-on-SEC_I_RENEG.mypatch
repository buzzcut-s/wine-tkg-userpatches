From b6a6e287dd07cc5b4ad49e748d97eee391e065d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 3 Dec 2020 10:53:35 +0100
Subject: [PATCH 12/12] secur32: Return STREAM_HEADER/TRAILER buffers on
 SEC_I_RENEGOTIATE.

And don't print an error anymore.
---
 dlls/secur32/schannel.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/dlls/secur32/schannel.c b/dlls/secur32/schannel.c
index 918f4eff8d2..f7ced5437bb 100644
--- a/dlls/secur32/schannel.c
+++ b/dlls/secur32/schannel.c
@@ -1331,6 +1331,7 @@ static void schan_decrypt_fill_buffer(PSecBufferDesc message, ULONG buffer_type,
 static SECURITY_STATUS SEC_ENTRY schan_DecryptMessage(PCtxtHandle context_handle,
         PSecBufferDesc message, ULONG message_seq_no, PULONG quality)
 {
+    SECURITY_STATUS status = SEC_E_OK;
     struct schan_context *ctx;
     SecBuffer *buffer;
     SIZE_T data_size;
@@ -1380,10 +1381,16 @@ static SECURITY_STATUS SEC_ENTRY schan_DecryptMessage(PCtxtHandle context_handle
     while (received < data_size)
     {
         SIZE_T length = data_size - received;
-        SECURITY_STATUS status = schan_imp_recv(ctx->session, data + received, &length);
+        status = schan_imp_recv(ctx->session, data + received, &length);
+
+        if (status == SEC_I_RENEGOTIATE)
+            break;
 
         if (status == SEC_I_CONTINUE_NEEDED)
+        {
+            status = SEC_E_OK;
             break;
+        }
 
         if (status != SEC_E_OK)
         {
@@ -1416,7 +1423,7 @@ static SECURITY_STATUS SEC_ENTRY schan_DecryptMessage(PCtxtHandle context_handle
     buffer->BufferType = SECBUFFER_STREAM_HEADER;
     buffer->cbBuffer = 5;
 
-    return SEC_E_OK;
+    return status;
 }
 
 static SECURITY_STATUS SEC_ENTRY schan_DeleteSecurityContext(PCtxtHandle context_handle)
-- 
2.29.2

