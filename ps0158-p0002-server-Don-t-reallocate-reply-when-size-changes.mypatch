From 8c9be738edf2a5ea207a4f3174ce92f4b658391b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 13 Mar 2020 16:32:56 +0100
Subject: [PATCH 2/4] server: Don't reallocate reply when size changes.

---
 server/request.c | 11 ++++++++---
 server/thread.c  |  6 +++++-
 server/thread.h  |  2 ++
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/server/request.c b/server/request.c
index 825e451aa74..c6bdc0f3e63 100644
--- a/server/request.c
+++ b/server/request.c
@@ -164,7 +164,12 @@ void fatal_error( const char *err, ... )
 void *set_reply_data_size( data_size_t size )
 {
     assert( size <= get_reply_max_size() );
-    if (size && !(current->reply_data = mem_alloc( size ))) size = 0;
+    if (size > current->rep_data_size)
+    {
+        if (!(current->rep_data = mem_alloc( size ))) size = 0;
+        current->rep_data_size = size;
+    }
+    current->reply_data = current->rep_data;
     current->reply_size = size;
     return current->reply_data;
 }
@@ -241,7 +246,7 @@ void write_reply( struct thread *thread )
     {
         if (!(thread->reply_towrite -= ret))
         {
-            free( thread->reply_data );
+            if (thread->reply_data != thread->rep_data) free( thread->reply_data );
             thread->reply_data = NULL;
             /* sent everything, can go back to waiting for requests */
             set_fd_events( thread->request_fd, POLLIN );
@@ -290,7 +295,7 @@ static void send_reply( union generic_reply *reply )
             goto done;
         }
     }
-    free( current->reply_data );
+    if (current->reply_data != current->rep_data) free( current->reply_data );
     current->reply_data = NULL;
 
 done:
diff --git a/server/thread.c b/server/thread.c
index 93510c40de8..9b5c9804dbd 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -226,6 +226,8 @@ static inline void init_thread_structure( struct thread *thread )
     thread->req_data        = NULL;
     thread->req_data_size   = 0;
     thread->req_toread      = 0;
+    thread->rep_data        = NULL;
+    thread->rep_data_size   = 0;
     thread->reply_data      = NULL;
     thread->reply_towrite   = 0;
     thread->request_fd      = NULL;
@@ -394,7 +396,8 @@ static void cleanup_thread( struct thread *thread )
     clear_apc_queue( &thread->system_apc );
     clear_apc_queue( &thread->user_apc );
     free( thread->req_data );
-    free( thread->reply_data );
+    free( thread->rep_data );
+    if (thread->reply_data != thread->rep_data) free( thread->reply_data );
     if (thread->request_fd) release_object( thread->request_fd );
     if (thread->reply_fd) release_object( thread->reply_fd );
     if (thread->wait_fd) release_object( thread->wait_fd );
@@ -412,6 +415,7 @@ static void cleanup_thread( struct thread *thread )
     }
     free( thread->desc );
     thread->req_data = NULL;
+    thread->rep_data = NULL;
     thread->reply_data = NULL;
     thread->request_fd = NULL;
     thread->reply_fd = NULL;
diff --git a/server/thread.h b/server/thread.h
index 26947debbbc..39bea055003 100644
--- a/server/thread.h
+++ b/server/thread.h
@@ -66,6 +66,8 @@ struct thread
     void                  *req_data;      /* variable-size data for request */
     unsigned int           req_data_size;
     unsigned int           req_toread;    /* amount of data still to read in request */
+    void                  *rep_data;      /* variable-size data for reply */
+    unsigned int           rep_data_size; /* size of reply data */
     void                  *reply_data;    /* variable-size data for reply */
     unsigned int           reply_size;    /* size of reply data */
     unsigned int           reply_towrite; /* amount of data still to write in reply */
