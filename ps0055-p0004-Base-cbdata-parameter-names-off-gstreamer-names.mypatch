From: Derek Lesho <dlesho@codeweavers.com>
Subject: [PATCH v2 04/11] Base cbdata parameter names off gstreamer names.
Message-Id: <20200210223241.4122430-4-dlesho@codeweavers.com>
Date: Mon, 10 Feb 2020 16:32:34 -0600
In-Reply-To: <20200210223241.4122430-1-dlesho@codeweavers.com>
References: <20200210223241.4122430-1-dlesho@codeweavers.com>

Signed-off-by: Derek Lesho <dlesho@codeweavers.com>
---
v2:
  - Split into two patches.
---
 dlls/winegstreamer/gst_cbs.c  | 28 ++++++++++++++--------------
 dlls/winegstreamer/gst_cbs.h  | 18 +++++++++---------
 dlls/winegstreamer/gstdemux.c | 14 +++++++-------
 3 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/dlls/winegstreamer/gst_cbs.c b/dlls/winegstreamer/gst_cbs.c
index e7a4b41d55..9fc172e292 100644
--- a/dlls/winegstreamer/gst_cbs.c
+++ b/dlls/winegstreamer/gst_cbs.c
@@ -89,9 +89,9 @@ void existing_new_pad_wrapper(GstElement *bin, GstPad *pad, gpointer user)
 {
     struct cb_data cbdata = { EXISTING_NEW_PAD };
 
-    cbdata.u.existing_new_pad_data.bin = bin;
-    cbdata.u.existing_new_pad_data.pad = pad;
-    cbdata.u.existing_new_pad_data.user = user;
+    cbdata.u.pad_added_data.element = bin;
+    cbdata.u.pad_added_data.pad = pad;
+    cbdata.u.pad_added_data.user = user;
 
     call_cb(&cbdata);
 }
@@ -123,11 +123,11 @@ gboolean activate_mode_wrapper(GstPad *pad, GstObject *parent, GstPadMode mode,
     return cbdata.u.activate_mode_data.ret;
 }
 
-void no_more_pads_wrapper(GstElement *decodebin, gpointer user)
+void no_more_pads_wrapper(GstElement *element, gpointer user)
 {
     struct cb_data cbdata = { NO_MORE_PADS };
 
-    cbdata.u.no_more_pads_data.decodebin = decodebin;
+    cbdata.u.no_more_pads_data.element = element;
     cbdata.u.no_more_pads_data.user = user;
 
     call_cb(&cbdata);
@@ -138,15 +138,15 @@ GstFlowReturn request_buffer_src_wrapper(GstPad *pad, GstObject *parent, guint64
 {
     struct cb_data cbdata = { REQUEST_BUFFER_SRC };
 
-    cbdata.u.request_buffer_src_data.pad = pad;
-    cbdata.u.request_buffer_src_data.parent = parent;
-    cbdata.u.request_buffer_src_data.ofs = ofs;
-    cbdata.u.request_buffer_src_data.len = len;
-    cbdata.u.request_buffer_src_data.buf = buf;
+    cbdata.u.getrange_data.pad = pad;
+    cbdata.u.getrange_data.parent = parent;
+    cbdata.u.getrange_data.ofs = ofs;
+    cbdata.u.getrange_data.len = len;
+    cbdata.u.getrange_data.buf = buf;
 
     call_cb(&cbdata);
 
-    return cbdata.u.request_buffer_src_data.ret;
+    return cbdata.u.getrange_data.ret;
 }
 
 gboolean event_src_wrapper(GstPad *pad, GstObject *parent, GstEvent *event)
@@ -192,9 +192,9 @@ void removed_decoded_pad_wrapper(GstElement *bin, GstPad *pad, gpointer user)
 {
     struct cb_data cbdata = { REMOVED_DECODED_PAD };
 
-    cbdata.u.removed_decoded_pad_data.bin = bin;
-    cbdata.u.removed_decoded_pad_data.pad = pad;
-    cbdata.u.removed_decoded_pad_data.user = user;
+    cbdata.u.pad_removed_data.element = bin;
+    cbdata.u.pad_removed_data.pad = pad;
+    cbdata.u.pad_removed_data.user = user;
 
     call_cb(&cbdata);
 }
diff --git a/dlls/winegstreamer/gst_cbs.h b/dlls/winegstreamer/gst_cbs.h
index 46f8add57c..ff83da5ac3 100644
--- a/dlls/winegstreamer/gst_cbs.h
+++ b/dlls/winegstreamer/gst_cbs.h
@@ -55,11 +55,11 @@ struct cb_data {
             gpointer user;
             GstBusSyncReply ret;
         } watch_bus_data;
-        struct existing_new_pad_data {
-            GstElement *bin;
+        struct pad_added_data {
+            GstElement *element;
             GstPad *pad;
             gpointer user;
-        } existing_new_pad_data;
+        } pad_added_data;
         struct query_function_data {
             GstPad *pad;
             GstObject *parent;
@@ -74,17 +74,17 @@ struct cb_data {
             gboolean ret;
         } activate_mode_data;
         struct no_more_pads_data {
-            GstElement *decodebin;
+            GstElement *element;
             gpointer user;
         } no_more_pads_data;
-        struct request_buffer_src_data {
+        struct getrange_data {
             GstPad *pad;
             GstObject *parent;
             guint64 ofs;
             guint len;
             GstBuffer **buf;
             GstFlowReturn ret;
-        } request_buffer_src_data;
+        } getrange_data;
         struct event_src_data {
             GstPad *pad;
             GstObject *parent;
@@ -103,11 +103,11 @@ struct cb_data {
             GstBuffer *buf;
             GstFlowReturn ret;
         } got_data_sink_data;
-        struct removed_decoded_pad_data {
-            GstElement *bin;
+        struct pad_removed_data {
+            GstElement *element;
             GstPad *pad;
             gpointer user;
-        } removed_decoded_pad_data;
+        } pad_removed_data;
         struct autoplug_blacklist_data {
             GstElement *bin;
             GstPad *pad;
diff --git a/dlls/winegstreamer/gstdemux.c b/dlls/winegstreamer/gstdemux.c
index 0b5fee3027..a11af29f2a 100644
--- a/dlls/winegstreamer/gstdemux.c
+++ b/dlls/winegstreamer/gstdemux.c
@@ -2266,8 +2266,8 @@ void CALLBACK perform_cb(TP_CALLBACK_INSTANCE *instance, void *user)
         }
     case EXISTING_NEW_PAD:
         {
-            struct existing_new_pad_data *data = &cbdata->u.existing_new_pad_data;
-            existing_new_pad(data->bin, data->pad, data->user);
+            struct pad_added_data *data = &cbdata->u.pad_added_data;
+            existing_new_pad(data->element, data->pad, data->user);
             break;
         }
     case QUERY_FUNCTION:
@@ -2285,13 +2285,13 @@ void CALLBACK perform_cb(TP_CALLBACK_INSTANCE *instance, void *user)
     case NO_MORE_PADS:
         {
             struct no_more_pads_data *data = &cbdata->u.no_more_pads_data;
-            no_more_pads(data->decodebin, data->user);
+            no_more_pads(data->element, data->user);
             break;
         }
     case REQUEST_BUFFER_SRC:
         {
-            struct request_buffer_src_data *data = &cbdata->u.request_buffer_src_data;
-            cbdata->u.request_buffer_src_data.ret = request_buffer_src(data->pad, data->parent,
+            struct getrange_data *data = &cbdata->u.getrange_data;
+            cbdata->u.getrange_data.ret = request_buffer_src(data->pad, data->parent,
                     data->ofs, data->len, data->buf);
             break;
         }
@@ -2315,8 +2315,8 @@ void CALLBACK perform_cb(TP_CALLBACK_INSTANCE *instance, void *user)
         }
     case REMOVED_DECODED_PAD:
         {
-            struct removed_decoded_pad_data *data = &cbdata->u.removed_decoded_pad_data;
-            removed_decoded_pad(data->bin, data->pad, data->user);
+            struct pad_removed_data *data = &cbdata->u.pad_removed_data;
+            removed_decoded_pad(data->element, data->pad, data->user);
             break;
         }
     case AUTOPLUG_BLACKLIST:

-- 
2.25.0

